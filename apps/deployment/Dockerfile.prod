# FROM nginx:alpine

# this two-stage build makes the final image much smaller
# as it contains only the final built app

# build environment
FROM docker-registry.ebrains.eu/model-catalog/node:16-alpine as build

WORKDIR /model-catalog
ENV PATH /model-catalog/node_modules/.bin:$PATH
COPY model_catalog/package.json ./
COPY model_catalog/package-lock.json ./
RUN npm ci --silent --legacy-peer-deps
COPY model_catalog ./
RUN node --max-old-space-size=4096 `which npm` run build

WORKDIR /curation-dashboard
ENV PATH /curation-dashboard/node_modules/.bin:$PATH
COPY curation-dashboard/package.json ./
COPY curation-dashboard/package-lock.json ./
RUN npm ci --silent --legacy-peer-deps
COPY curation-dashboard ./
RUN npm run build


# production environment
FROM docker-registry.ebrains.eu/model-catalog/nginx:stable-alpine
COPY deployment/nginx-app.conf /etc/nginx/conf.d/default.conf
COPY --from=build /model-catalog/build /usr/share/nginx/html/model-catalog
COPY --from=build /curation-dashboard/build /usr/share/nginx/html/curation-dashboard
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
